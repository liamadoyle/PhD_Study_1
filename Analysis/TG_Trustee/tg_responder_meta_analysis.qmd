---
title: "Trust Game (Responder)"
author: "Liam Doyle"
format: html
embed-resources: true
editor: visual
---

## Description

This document is a summary of the analyses performed for the eighth meta-analytic model conducted in Study 1 of my dissertation. This model examined the relationship between psychopathy and exploitative behavior in the Trust Game as the Responder (or Trustee).

## Loading Packages

All relevant packages loaded below.

```{r library}
library(tidyverse)
library(meta)
library(metafor)
library(devtools)
library(esc)
library(effectsize)
library(psych)
library(dmetar)
library(readxl)
```

## Loading Data

Loading the excel spreadsheet with all study information.

```{r data import}
TG_Trustee <- read_excel("TG_Trustee.xlsx")
```

## Recoding Variables as Factors

Recoding relevant variables (i.e., moderators in the analysis) as factors.

```{r recode}
TG_Trustee$Sample_Source <- factor(TG_Trustee$Sample_Source,
                                  levels = c(0, 1, 2, 3),
                                  labels = c("Community", "Student", "Inmate", "Mixed"))

TG_Trustee$Publication_Status <- factor(TG_Trustee$Publication_Status,
                                       levels = c(0, 1),
                                       labels = c("Unpublished", "Published"))

TG_Trustee$Measure_coded <- factor(TG_Trustee$Measure_coded,
                                       levels = c(0, 1, 2, 3, 4, 5, 6),
                                       labels = c("SRP", "PCL", "PPI", 
                                                  "LSRP", "TriPM", "SD3",
                                                  "DD"))

TG_Trustee$Iterated <- factor(TG_Trustee$Iterated,
                                       levels = c(0, 1),
                                       labels = c("One-shot", "Iterated"))

TG_Trustee$Perceived_Opponent <- factor(TG_Trustee$Perceived_Opponent,
                                        levels = c(0, 1),
                                        labels = c("No", "Yes"))

TG_Trustee$Social_role <- factor(TG_Trustee$Social_role,
                                       levels = c(0, 1),
                                       labels = c("Close member", "Distant member"))

TG_Trustee$Incentives <- factor(TG_Trustee$Incentives,
                               levels = c(0, 1, 2),
                               labels = c("Not incentivized", "Participation incentivized",
                                          "Performance incentivized"))

TG_Trustee$Experimental_Manipulation <- factor(TG_Trustee$Experimental_Manipulation,
                                                levels = c(0, 1),
                                                labels = c("No Manipulation",
                                                           "Manipulation"))

TG_Trustee$Feedback <- factor(TG_Trustee$Feedback,
                                levels = c(0, 1),
                                labels = c("No feedback", "Feedback"))
```

## Computing Additional Variables

Performing mathematical computations to compute relevant variables such as Fisher's *z*, as well as it's standard error and variance.

```{r transform}
TG_Trustee <- TG_Trustee %>%
  mutate(z_psyc_coop = 0.5 * log((1 + Psyc_Coop)/(1 - Psyc_Coop)))

TG_Trustee <- TG_Trustee %>%
  mutate(z_se_psyc_coop = 1/(sqrt(n_effect - 3)))

TG_Trustee <- TG_Trustee %>%
  mutate(var_z_psyc_coop = (z_se_psyc_coop^2))
```

## Random-Effects Model of Psychopathy on Cooperation in the Prisoner's Dilemma Game

As noted in the heading and the project description, this model utilizes a multi-level or hierarchical approach to modelling the relationship between psychopathy and cooperation in the Dictator Game. This is due to the fact that several of the studies included in the meta-analysis contributed more than one effect size to the analysis (e.g., a study using more than one measure of psychopathy). The contemporary recommendation for addressing this issue is to use a multi-level approach to cluster these data points - rather than simply aggregating them and ignoring potential differences between the effects.

Additionally, I have made the decision to use a random-effects model for the meta-analyses in this dissertation. The fixed-effects model makes untenable assumptions about the sources of variance in the effect sizes (i.e., assuming that all effect sizes are from a homogenous population, and the only source of variance in effect sizes is from sampling error). The assumptions of a fixed-effects model also stand in contradiction to the intended moderator analyses which make up a substantial portion of our later analyses.

### Creation of the Model

```{r model}
full.model <- rma.mv(yi = z_psyc_coop,
                     V = var_z_psyc_coop,
                     slab = Study,
                     data = TG_Trustee,
                     random = ~ 1 | Study/Effect_size_ID,
                     test = "t",
                     method = "REML")

summary(full.model)

convert_z2r(-.2088)
```

As we can see, the model estimates that the meta-analytic effect size is *r* = -.206, 95% CI \[-.404, -.014\]. Cochran's *Q* statistic was significant, indicating the presence of between-study or within-study heterogeneity.

### Distribution of Variance Across Levels

This function, provided by the package *dmetar*, calculates a multilevel version of I2. Level 1 variance corresponds to sampling error variance. Level 2 variance corresponds to within-study (or cluster) variance. Level 3 variance corresponds to between-study variance.

```{r variance}
i2 <- var.comp(full.model)

plot(i2)
```

In our case, roughly 68.35% of the variation between effect sizes can be attributed to between-study heterogeneity. According to the multi-level model, none of the variation between effect sizes is due to within-study heterogeneity. Rather, the remaining variance has been attributed to sampling error. This *I*^2^ value is considered to represent a substantial amount of heterogeneity.

### Comparing Models

Examining the fit of a simple random-effects meta-analytic model vs. the multi-level random-effects meta-analytic model. This suggests that the fit of the multi-level random-effects model is poorer (though non-significantly so) than a simple random-effects model. However, we will retain the multi-level model. Theoretically, the three-level structure better represents the data-generating process (i.e., the nested structure of some effect sizes).

```{r model comparison}
l3.removed <- rma.mv(yi = z_psyc_coop,
                     V = var_z_psyc_coop,
                     slab = Study,
                     data = TG_Trustee,
                     random = ~ 1 | Study/Effect_size_ID,
                     test = "t",
                     method = "REML",
                     sigma2 = c(0, NA))

anova(full.model, l3.removed)
```


### Forest Plot of the Model

Note: This plot had to be generated using a simple random-effects meta-analytic model, as there is not a package available in *R* to accommodate the creation of forest plots for multi-level meta-analytic models.

```{r forest plot, warning=FALSE}
m.cor <- metacor(cor = Psyc_Coop,
                 n = n_effect,
                 studlab = Study,
                 data = TG_Trustee,
                 fixed = FALSE,
                 random = TRUE,
                 method.tau = "REML",
                 method.random.ci = "HK",
                 title = "Psychopathy and Cooperation as the Trustee in the TG")

forestplot <- meta::forest(m.cor,
                           sortvar = Psyc_Coop,
                           prediction = TRUE,
                           print.tau2 = TRUE)
```

## Tests of Publication Bias

In this section, I examined the possibility of publication bias via the visual examination of funnel plots, Egger's regression test, a simple meta-regression which regressed publication status (as a binary factor) on effect size, and PET-PEESE methods.

### Funnel Plot

It is difficult in this case to assess asymmetry given the small number of studies. However, there does appear that there is an empty "pocket" in the lower left quadrant of the distribution. This, however, does not support the notion of publication bias. The asymmetry in the funnel plot suggests that smaller studies *do* indicate smaller effect sizes (which are also closer to zero). The remaining studies appear to be roughly symmetrically distributed.

As noted previously, asymmetry in a funnel plot has several possible sources (Page et al., 2020):

-   Publication bias and other reporting biases;
-   Variability in methodological quality;
-   Between-study heterogeneity;
-   Artefactual variance (i.e., via the correlation between effect sizes and their standard error)
-   Chance

```{r funnel}
meta::funnel(m.cor,
             xlim = c(-1, 1),
             studlab = FALSE)

title("Funnel Plot of the Effect Sizes for the TG-R Model")
```

### Egger's Regression Test

Egger's regression test (Egger et al., 1997) is a method that provides a statistical test of asymmetry in a funnel plot. It involves the prediction of standardized effect sizes on their precision.

The intercept (i.e., $\beta_0$) is of primary interest, representing the asymmetry of the plot. NHST can be used to test the null hypothesis that the intercept is equal to zero, indicating symmetry in the funnel plot. Conversely, a rejected null hypothesis for the intercept indicates asymmetry in the funnel plot - potentially due to publication bias.

The slope (i.e., $\beta_1$) represents the effect size adjusted for precision. It is expected to be consistent with the overall meta-analytic effect.

Reported below is the significance test and parameter estimate for the intercept.

```{r egger}
metabias(m.cor,
         method.bias = "linreg",
         k.min = 8)
```

The intercept trended towards significance, indicating that there may be some asymmetry in the funnel plot. This should be taken with some reservations, however, as meta-regression techniques should not be employed with samples sizes under 10 (i.e., *k* < 10; Deeks et al., 2023). This note also applies to the next two investigations of publication bias.

### Publication Status as a Moderator of Effect Size

Simple meta-regression was used to predict effect sizes from publication status as a factor (i.e., 0 = unpublished, 1 = published).

```{r moderator publication status}
mod.model.pub <- rma.mv(yi = z_psyc_coop,
                     V = var_z_psyc_coop,
                     slab = Study,
                     data = TG_Trustee,
                     random = ~ 1 | Study/Effect_size_ID,
                     test = "t",
                     method = "REML",
                     mods = ~ Publication_Status)

summary(mod.model.pub)
```

The omnibus test indicates that there is no significant difference between published and unpublished studies, *F*(1, 6) = 2.75, *p* = .148. However, it should be noted that the parameter estimates indicate a difference between unpublished studies, *r* = .101, and published studies, *r* = -.259. The reversal of the direction of the effect is concerning, although it should be noted that the sample size for the two groups is *k* = 1 and *k* = 7, respectively.

### PET & PEESE Analyses

The PET (Precision-Effect Test) and PEESE (Precision-Effect Estimate with Standard Error) are two analytical methods designed to address publication bias in meta-analyses.

The former, PET analysis, is designed to determine the degree to which small-study effects and publication bias impact a meta-analysis. To do so, effect sizes are predicted from their standard errors. This analysis is used to provide evidence that a genuine effect exists beyond the effect of small-study effects/publication bias.

#### PET Analysis

The key element of the PET analysis is the estimate for $\beta_0$ or the intercept of the regression. According to the logic for PET analysis, a non-significant intercept indicates that no genuine effect occurs beyond small-study effects/publication bias. In contrast, a significant intercept provides evidence for a true effect.

That being said, one potential issue with both PET and PEESE analysis is the assumption that there is a homogenous distribution underlying effect sizes. Conceptually, this is similar to the assumption underlying fixed-effects meta-analyses (https://willgervais.com/blog/2015/6/25/putting-pet-peese-to-the-test-1). While this is problematic in and of itself, we will proceed using the PET-PEESE method.

```{r PET}
pet_model <- rma.mv(yi = z_psyc_coop,
                    V = var_z_psyc_coop,
                    slab = Study,
                    data = TG_Trustee,
                    random = ~ 1 | Study/Effect_size_ID,
                    test = "t",
                    method = "REML",
                    mods = ~ z_se_psyc_coop)

summary(pet_model)
```

As seen in the output, the intercept in the model is significant (*p* = .042). Based on the logic of the test, this indicates that a true effect exists beyond publication bias. In the logic of the PET-PEESE model, we should process to PEESE analysis - although it should again be noted that meta-regression techniques should not be utilized with fewer than 10 studies (Deeks et al., 2023) and that the PET-PEESE method performs poorly with sample sizes under 20 studies (Stanley, 2017) and is known to overcorrect parameter estimates (Carter et al., 2019).

#### PEESE Analysis

PEESE analysis aims to produce a precise estimate of the true effect size after accounting for sampling error, small-study effects, and publication bias. It does so by creating a regression where effect sizes are predicted by the squared standard errors of studies.

Again, the primary parameter estimate of interest is $\beta_0$, which indicates the estimate of the true effect size (after adjusting for sampling error, small-study effects, and publication bias). Significance tests are interpreted such that a significant intercept indicates a significant meta-analytic effect size.

A secondary parameter estimate of interest is $\beta_1$, which indicates the relationship between effect sizes and their variances. When this is significant, there is evidence that effect sizes are systematically related to the estimate of their precision (i.e., their variance), which may suggest the presence of small-study effects or publication bias.

More particularly, a positive slope indicates that larger variances (with larger standard errors, and, oftentimes, smaller sample sizes) report larger effect sizes. This is representative of the typical "small-study effect" and indicates potential publication bias.

In contrast, a negative slope suggests that smaller studies report smaller effect sizes and larger studies report larger effect sizes. This may indicate other sources of bias or sources of heterogeneity impacting the results.

```{r PEESE}
peese_model <- rma.mv(yi = z_psyc_coop,
                      V = var_z_psyc_coop,
                      slab = Study,
                      data = TG_Trustee,
                      random = ~ 1 | Study/Effect_size_ID,
                      test = "t",
                      method = "REML",
                      mods = ~ var_z_psyc_coop)

summary(peese_model)

convert_z2r(-.3743)
```

As seen in the model output, the PEESE method indicates that the true effect size is *r* = -.358 and significant at *p* = .028. This is substantially higher than our initial estimate, *r* = -0.209.

The slope coefficient indicates a non-significant, positive relationship between effect sizes and their variances (see above). The fact that this relationship is not significant indicates that publication bias does not have a substantial impact on the effect sizes.

To illustrate the slope estimated by the model visually, we will plot the regression.

```{r PEESE plot}
plot(
  TG_Trustee$var_z_psyc_coop, TG_Trustee$z_psyc_coop,
  xlab = "Variance of Effect Sizes",
  ylab = "Effect Sizes",
  main = "PEESE Analysis of Psychopathy-Cooperation Meta-Analysis (TG-Responder)"
)
abline(a = coef(peese_model)[1], b = coef(peese_model)[2], col = "blue")
```

### Fail-Safe *N*

A variation of Orwin's (1983) fail-safe N test was used to indicate the number of studies with null effects needed to reduce the effect size to a practically irrelevant size (Viechtbauer, 2010). Practical insignificance was demarked by an effect size of r = \|.05\|, depending on the direction of the summary effect.

```{r fail-safe}
fail.safe <- rma(yi = z_psyc_coop,
                 vi = var_z_psyc_coop,
                 data = TG_Trustee,
                 test = "knha",
                 method = "REML")

fsn(fail.safe, type = "General", target = 0.05)
```